# Production Environment Configuration for Vercel
# Copy these settings to Vercel Dashboard → Settings → Environment Variables
# DO NOT commit actual values - this is a template only

# =============================================================================
# CRITICAL: Set these in Vercel Dashboard, NOT in code
# =============================================================================

# -----------------------------------------------------------------------------
# Core Application (REQUIRED)
# -----------------------------------------------------------------------------

# Environment
NODE_ENV=production

# NextAuth Configuration (REQUIRED)
# Generate: openssl rand -base64 32
NEXTAUTH_SECRET=your-secure-nextauth-secret-at-least-32-characters-long
# Must match your Vercel deployment URL exactly (no trailing slash)
NEXTAUTH_URL=https://your-app.vercel.app

# -----------------------------------------------------------------------------
# Database (REQUIRED)
# -----------------------------------------------------------------------------

# PostgreSQL Connection String
# Supabase: postgresql://postgres.[PROJECT-REF]:[PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1
# Neon: postgresql://[user]:[password]@[endpoint].neon.tech/[dbname]?sslmode=require
DATABASE_URL=postgresql://username:password@host:5432/database?schema=public&connection_limit=1

# -----------------------------------------------------------------------------
# Security (REQUIRED)
# -----------------------------------------------------------------------------

# Master Encryption Key for API Keys (REQUIRED)
# Generate: openssl rand -hex 64
# Must be exactly 64 characters (128 hex digits)
ENCRYPTION_MASTER_KEY=your-64-character-hex-encryption-key-generate-with-openssl-rand-hex-64

# Demo Mode (MUST be false in production)
ALLOW_DEMO_MODE=false

# Session Configuration
SESSION_MAX_AGE=7200

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MS=900000

# -----------------------------------------------------------------------------
# LLM Provider API Keys (At least ONE required)
# -----------------------------------------------------------------------------

# OpenAI (GPT-4, GPT-3.5, etc.)
OPENAI_API_KEY=sk-proj-your-openai-api-key

# Anthropic Claude (Claude 3.5, Claude 3, etc.)
ANTHROPIC_API_KEY=sk-ant-api03-your-anthropic-api-key

# Google AI (Gemini Pro, etc.)
GOOGLE_AI_API_KEY=your-google-ai-api-key

# OpenRouter (Access to multiple models)
OPENROUTER_API_KEY=sk-or-your-openrouter-api-key

# -----------------------------------------------------------------------------
# OAuth Providers (Optional)
# -----------------------------------------------------------------------------

# Google OAuth
# Setup: https://console.cloud.google.com
# Callback: https://your-app.vercel.app/api/auth/callback/google
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your-google-client-secret

# GitHub OAuth
# Setup: https://github.com/settings/developers
# Callback: https://your-app.vercel.app/api/auth/callback/github
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# -----------------------------------------------------------------------------
# Optional Features
# -----------------------------------------------------------------------------

# Redis (Optional - for distributed rate limiting and caching)
# REDIS_URL=redis://default:password@host:6379

# Monitoring & Error Tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Logging
LOG_LEVEL=info

# Analytics
ENABLE_ANALYTICS=true
ENABLE_TELEMETRY=true

# =============================================================================
# HOW TO SET THESE IN VERCEL
# =============================================================================

# 1. Go to: https://vercel.com/[your-username]/[your-project]/settings/environment-variables
# 2. Click "Add New"
# 3. Enter the variable name (e.g., NEXTAUTH_SECRET)
# 4. Enter the value
# 5. Select environments:
#    - ✅ Production (always required)
#    - ✅ Preview (optional, for preview deployments)
#    - ⬜ Development (use .env.local locally instead)
# 6. Click "Save"
# 7. Repeat for all required variables
# 8. Redeploy your application

# =============================================================================
# VERCEL CLI METHOD (Alternative)
# =============================================================================

# Install Vercel CLI:
# npm install -g vercel

# Add variables:
# vercel env add NEXTAUTH_SECRET production
# vercel env add DATABASE_URL production
# vercel env add OPENAI_API_KEY production
# (and so on...)

# Pull variables to local (optional):
# vercel env pull .env.vercel.local

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================

# Before deploying to production, verify:
# ✅ NEXTAUTH_SECRET is 32+ random characters
# ✅ ENCRYPTION_MASTER_KEY is 64 random hex characters  
# ✅ ALLOW_DEMO_MODE=false (or omitted)
# ✅ DATABASE_URL points to production database with connection pooling
# ✅ NEXTAUTH_URL matches deployment URL exactly
# ✅ All API keys are production keys (not test keys)
# ✅ OAuth redirect URIs match deployment URL
# ✅ No secrets committed to git
# ✅ Rate limiting is enabled
# ✅ SESSION_MAX_AGE is reasonably short (7200 = 2 hours)
# ✅ LOG_LEVEL is appropriate (info or warn, not debug)

# =============================================================================
# KEY GENERATION COMMANDS
# =============================================================================

# NEXTAUTH_SECRET (32+ characters):
# openssl rand -base64 32

# ENCRYPTION_MASTER_KEY (64 hex characters):
# openssl rand -hex 64

# Password Hash (for creating users):
# node -e "console.log(require('bcryptjs').hashSync('YourPassword123!', 10))"

# UUID (for user IDs):
# node -e "console.log(require('crypto').randomUUID())"

# =============================================================================
# DATABASE SETUP REMINDER
# =============================================================================

# After setting DATABASE_URL, deploy schema:
# 1. Set DATABASE_URL locally: export DATABASE_URL="your-production-url"
# 2. Generate Prisma client: npx prisma generate
# 3. Deploy schema: npx prisma migrate deploy
# 4. Verify in database GUI (Supabase/Neon dashboard)

# =============================================================================
# MANUAL INPUT LOCATIONS - WHERE TO PUT API KEYS
# =============================================================================

# 1. VERCEL DASHBOARD (Primary method):
#    → https://vercel.com/[username]/[project]/settings/environment-variables
#    → Click "Add New" for each variable
#    → Select "Production" environment
#    → Save and redeploy

# 2. VERCEL CLI (Alternative):
#    → Run: vercel env add [KEY_NAME] production
#    → Enter value when prompted
#    → Repeat for each variable

# 3. LOCAL DEVELOPMENT:
#    → Create .env.local (never commit this!)
#    → Add all variables there
#    → Used by `npm run dev`

# 4. OAUTH PROVIDERS:
#    → Google: https://console.cloud.google.com/apis/credentials
#    → GitHub: https://github.com/settings/developers
#    → Configure redirect URIs to match your deployment

# 5. DATABASE PROVIDERS:
#    → Supabase: https://supabase.com/dashboard/project/_/settings/database
#    → Neon: https://console.neon.tech/app/projects/[project]/connection-details
#    → Copy connection string to DATABASE_URL

# 6. LLM PROVIDERS:
#    → OpenAI: https://platform.openai.com/api-keys
#    → Anthropic: https://console.anthropic.com/settings/keys
#    → Google AI: https://makersuite.google.com/app/apikey
#    → OpenRouter: https://openrouter.ai/keys

# =============================================================================
# DEPLOYMENT WORKFLOW
# =============================================================================

# 1. Set all environment variables in Vercel Dashboard
# 2. Push code to GitHub
# 3. Vercel automatically builds and deploys
# 4. Deploy database schema: npx prisma migrate deploy
# 5. Test deployment: visit https://your-app.vercel.app
# 6. Verify authentication works
# 7. Test LLM API calls
# 8. Monitor logs in Vercel Dashboard

# =============================================================================
# NEED HELP?
# =============================================================================

# See documentation:
# - VERCEL_DEPLOYMENT.md - Full Vercel deployment guide
# - DATABASE_SETUP.md - Database configuration (Supabase/Neon)
# - AUTH_SETUP.md - Authentication setup and OAuth
# - README.md - General project documentation
